// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expression compiler expressions with a debugger 1`] = `
"function anonymous(getValue,fns
) {
// =? A1 / 2
debugger;
let _1 = getValue('A1') / 2;
return _1;
}"
`;

exports[`expression compiler read some values and functions 1`] = `
"function anonymous(getValue,fns
) {
// =A1 + sum(A2:C3)
let _2 = fns.range('A2', 'C3');
let _1 = getValue('A1') + fns['SUM'](_2);
return _1;
}"
`;

exports[`expression compiler simple values 1`] = `
"function anonymous(getValue,fns
) {
// =1
return 1;
}"
`;

exports[`expression compiler simple values 2`] = `
"function anonymous(getValue,fns
) {
// =true
return true;
}"
`;

exports[`expression compiler simple values 3`] = `
"function anonymous(getValue,fns
) {
// ='abc'
return 'abc';
}"
`;

exports[`expression compiler some arithmetic expressions 1`] = `
"function anonymous(getValue,fns
) {
// =1 + 3 * 4
let _2 = 3 * 4;
let _1 = 1 + _2;
return _1;
}"
`;

exports[`expression compiler some arithmetic expressions 2`] = `
"function anonymous(getValue,fns
) {
// =(3 + 1) * (-1 + 4)
let _2 = 3 + 1;
let _4 = 0 - 1;
let _3 = _4 + 4;
let _1 = _2 * _3;
return _1;
}"
`;
